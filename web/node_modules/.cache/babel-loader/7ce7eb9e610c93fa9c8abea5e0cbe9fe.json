{"remainingRequest":"/Users/airwaves/Desktop/pages/Buz/web/node_modules/_thread-loader@2.1.3@thread-loader/dist/cjs.js!/Users/airwaves/Desktop/pages/Buz/web/node_modules/_babel-loader@8.0.6@babel-loader/lib/index.js!/Users/airwaves/Desktop/pages/Buz/web/node_modules/_eslint-loader@2.2.1@eslint-loader/index.js??ref--13-0!/Users/airwaves/Desktop/pages/Buz/web/src/entry-server.js","dependencies":[{"path":"/Users/airwaves/Desktop/pages/Buz/web/src/entry-server.js","mtime":1578825304000},{"path":"/Users/airwaves/Desktop/pages/Buz/web/node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/airwaves/Desktop/pages/Buz/web/node_modules/_thread-loader@2.1.3@thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/airwaves/Desktop/pages/Buz/web/node_modules/_babel-loader@8.0.6@babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/airwaves/Desktop/pages/Buz/web/node_modules/_eslint-loader@2.2.1@eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5pdGVyYXRvciI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuaXRlcmF0b3IiOwppbXBvcnQgIi9Vc2Vycy9haXJ3YXZlcy9EZXNrdG9wL3BhZ2VzL0J1ei93ZWIvbm9kZV9tb2R1bGVzL19jb3JlLWpzQDMuNi40QGNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5pdGVyYXRvci5qcyI7CmltcG9ydCAiL1VzZXJzL2FpcndhdmVzL0Rlc2t0b3AvcGFnZXMvQnV6L3dlYi9ub2RlX21vZHVsZXMvX2NvcmUtanNAMy42LjRAY29yZS1qcy9tb2R1bGVzL2VzLnByb21pc2UuanMiOwppbXBvcnQgIi9Vc2Vycy9haXJ3YXZlcy9EZXNrdG9wL3BhZ2VzL0J1ei93ZWIvbm9kZV9tb2R1bGVzL19jb3JlLWpzQDMuNi40QGNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QuYXNzaWduLmpzIjsKaW1wb3J0ICIvVXNlcnMvYWlyd2F2ZXMvRGVza3RvcC9wYWdlcy9CdXovd2ViL25vZGVfbW9kdWxlcy9fY29yZS1qc0AzLjYuNEBjb3JlLWpzL21vZHVsZXMvZXMucHJvbWlzZS5maW5hbGx5LmpzIjsKLy8gcnVucyBvbiBzZXJ2ZXIgb25seQppbXBvcnQgeyBjcmVhdGVBcHAgfSBmcm9tICcuL21haW4nOyAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgYXJyb3ctYm9keS1zdHlsZQoKZXhwb3J0IGRlZmF1bHQgKGZ1bmN0aW9uIChjb250ZXh0KSB7CiAgLy8gc2luY2UgdGhlcmUgY291bGQgcG90ZW50aWFsbHkgYmUgYXN5bmNocm9ub3VzIHJvdXRlIGhvb2tzIG9yIGNvbXBvbmVudHMsCiAgLy8gd2Ugd2lsbCBiZSByZXR1cm5pbmcgYSBQcm9taXNlIHNvIHRoYXQgdGhlIHNlcnZlciBjYW4gd2FpdCB1bnRpbAogIC8vIGV2ZXJ5dGhpbmcgaXMgcmVhZHkgYmVmb3JlIHJlbmRlcmluZy4KICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24gKHJlc29sdmUsIHJlamVjdCkgewogICAgdmFyIF9jcmVhdGVBcHAgPSBjcmVhdGVBcHAoKSwKICAgICAgICBhcHAgPSBfY3JlYXRlQXBwLmFwcCwKICAgICAgICByb3V0ZXIgPSBfY3JlYXRlQXBwLnJvdXRlciwKICAgICAgICBzdG9yZSA9IF9jcmVhdGVBcHAuc3RvcmU7IC8vIHNldCBzZXJ2ZXItc2lkZSByb3V0ZXIncyBsb2NhdGlvbgoKCiAgICByb3V0ZXIucHVzaChjb250ZXh0LnVybCk7IC8vIHdhaXQgdW50aWwgcm91dGVyIGhhcyByZXNvbHZlZCBwb3NzaWJsZSBhc3luYyBjb21wb25lbnRzIGFuZCBob29rcwoKICAgIHJvdXRlci5vblJlYWR5KGZ1bmN0aW9uICgpIHsKICAgICAgLy8gVGhpcyBgcmVuZGVyZWRgIGhvb2sgaXMgY2FsbGVkIHdoZW4gdGhlIGFwcCBoYXMgZmluaXNoZWQgcmVuZGVyaW5nCiAgICAgIC8vIEFmdGVyIHRoZSBhcHAgaXMgcmVuZGVyZWQsIG91ciBzdG9yZSBpcyBub3cKICAgICAgLy8gZmlsbGVkIHdpdGggdGhlIHN0YXRlIGZyb20gb3VyIGNvbXBvbmVudHMuCiAgICAgIC8vIFdoZW4gd2UgYXR0YWNoIHRoZSBzdGF0ZSB0byB0aGUgY29udGV4dCwgYW5kIHRoZSBgdGVtcGxhdGVgIG9wdGlvbgogICAgICAvLyBpcyB1c2VkIGZvciB0aGUgcmVuZGVyZXIsIHRoZSBzdGF0ZSB3aWxsIGF1dG9tYXRpY2FsbHkgYmUKICAgICAgLy8gc2VyaWFsaXplZCBhbmQgaW5qZWN0ZWQgaW50byB0aGUgSFRNTCBhcyBgd2luZG93Ll9fSU5JVElBTF9TVEFURV9fYC4KICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXBhcmFtLXJlYXNzaWduLCBuby1yZXR1cm4tYXNzaWduCiAgICAgIC8vIGNvbnRleHQucmVuZGVyZWQgPSAoKSA9PiBjb250ZXh0LnN0YXRlID0gc3RvcmUuc3RhdGU7CiAgICAgIC8vIG5vIG1hdGNoZWQgcm91dGVzLCByZWplY3Qgd2l0aCA0MDQKICAgICAgdmFyIG1hdGNoZWRDb21wb25lbnRzID0gcm91dGVyLmdldE1hdGNoZWRDb21wb25lbnRzKCk7CgogICAgICBpZiAobWF0Y2hlZENvbXBvbmVudHMubGVuZ3RoID09PSAwKSB7CiAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIHByZWZlci1wcm9taXNlLXJlamVjdC1lcnJvcnMKICAgICAgICByZXR1cm4gcmVqZWN0KHsKICAgICAgICAgIGNvZGU6IDQwNAogICAgICAgIH0pOwogICAgICB9CgogICAgICBQcm9taXNlLmFsbChtYXRjaGVkQ29tcG9uZW50cy5tYXAoZnVuY3Rpb24gKGNvbXBvbmVudCkgewogICAgICAgIGlmIChjb21wb25lbnQuc2VydmVyUmVxdWVzdCkgewogICAgICAgICAgcmV0dXJuIGNvbXBvbmVudC5zZXJ2ZXJSZXF1ZXN0KHN0b3JlKTsKICAgICAgICB9CiAgICAgIH0pKS50aGVuKGZ1bmN0aW9uICgpIHsKICAgICAgICBjb250ZXh0LnN0YXRlID0gc3RvcmUuc3RhdGU7CiAgICAgICAgcmVzb2x2ZShhcHApOwogICAgICB9KS5jYXRjaChyZWplY3QpOyAvLyB0aGUgUHJvbWlzZSBzaG91bGQgcmVzb2x2ZSB0byB0aGUgYXBwIGluc3RhbmNlIHNvIGl0IGNhbiBiZSByZW5kZXJlZAogICAgICAvLyByZXR1cm4gcmVzb2x2ZShhcHApOwogICAgfSwgcmVqZWN0KTsKICB9KTsKfSk7"},{"version":3,"sources":["/Users/airwaves/Desktop/pages/Buz/web/src/entry-server.js"],"names":["createApp","context","Promise","resolve","reject","app","router","store","push","url","onReady","matchedComponents","getMatchedComponents","length","code","all","map","component","serverRequest","then","state","catch"],"mappings":";;;;;;;;AAAA;AAEA,SAASA,SAAT,QAA0B,QAA1B,C,CAEA;;AACA,gBAAe,UAACC,OAAD,EAAa;AAC1B;AACA;AACA;AACA,SAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAAA,qBACRJ,SAAS,EADD;AAAA,QAC9BK,GAD8B,cAC9BA,GAD8B;AAAA,QACzBC,MADyB,cACzBA,MADyB;AAAA,QACjBC,KADiB,cACjBA,KADiB,EAGtC;;;AACAD,IAAAA,MAAM,CAACE,IAAP,CAAYP,OAAO,CAACQ,GAApB,EAJsC,CAMtC;;AACAH,IAAAA,MAAM,CAACI,OAAP,CAAe,YAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAMC,iBAAiB,GAAGL,MAAM,CAACM,oBAAP,EAA1B;;AACA,UAAID,iBAAiB,CAACE,MAAlB,KAA6B,CAAjC,EAAoC;AAClC;AACA,eAAOT,MAAM,CAAC;AAAEU,UAAAA,IAAI,EAAE;AAAR,SAAD,CAAb;AACD;;AACDZ,MAAAA,OAAO,CAACa,GAAR,CAAYJ,iBAAiB,CAACK,GAAlB,CAAsB,UAAAC,SAAS,EAAG;AAC5C,YAAGA,SAAS,CAACC,aAAb,EAA2B;AACzB,iBAAOD,SAAS,CAACC,aAAV,CAAwBX,KAAxB,CAAP;AACD;AACF,OAJW,CAAZ,EAIIY,IAJJ,CAIS,YAAI;AACXlB,QAAAA,OAAO,CAACmB,KAAR,GAAgBb,KAAK,CAACa,KAAtB;AACAjB,QAAAA,OAAO,CAACE,GAAD,CAAP;AACD,OAPD,EAOGgB,KAPH,CAOSjB,MAPT,EAfmB,CAuBnB;AACA;AACD,KAzBD,EAyBGA,MAzBH;AA0BD,GAjCM,CAAP;AAkCD,CAtCD","sourcesContent":["// runs on server only\n\nimport { createApp } from './main';\n \n// eslint-disable-next-line arrow-body-style\nexport default (context) => {\n  // since there could potentially be asynchronous route hooks or components,\n  // we will be returning a Promise so that the server can wait until\n  // everything is ready before rendering.\n  return new Promise((resolve, reject) => {\n    const { app, router ,store} = createApp();\n\n    // set server-side router's location\n    router.push(context.url);\n\n    // wait until router has resolved possible async components and hooks\n    router.onReady(() => {\n      // This `rendered` hook is called when the app has finished rendering\n      // After the app is rendered, our store is now\n      // filled with the state from our components.\n      // When we attach the state to the context, and the `template` option\n      // is used for the renderer, the state will automatically be\n      // serialized and injected into the HTML as `window.__INITIAL_STATE__`.\n      // eslint-disable-next-line no-param-reassign, no-return-assign\n      // context.rendered = () => context.state = store.state;\n      // no matched routes, reject with 404\n      const matchedComponents = router.getMatchedComponents();\n      if (matchedComponents.length === 0) {\n        // eslint-disable-next-line prefer-promise-reject-errors\n        return reject({ code: 404 });\n      }\n      Promise.all(matchedComponents.map(component =>{\n        if(component.serverRequest){\n          return component.serverRequest(store)\n        }\n      })).then(()=>{\n        context.state = store.state;\n        resolve(app)\n      }).catch(reject)\n      // the Promise should resolve to the app instance so it can be rendered\n      // return resolve(app);\n    }, reject);\n  });\n};\n"]}]}